{"version":3,"sources":["Pages/HomePage/MainSection/MainSection.jsx","Pages/HomePage/MainSection/MainSection.module.css","Helpers/datetimeHelpers.js"],"names":["MainSection","className","styles","container","article","heading","getGreeting","name","para","getCurrentAge","href","explore_btn","down_icon","bg_particles","params","particles","number","value","window","innerWidth","size","color","interactivity","events","onhover","enable","mode","module","exports","monthNames","greetingsArray","today","Date","currentHours","parseInt","getHours","birthDay","birthMonth","birthYear","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","formatDate","datetimeString"],"mappings":"qGAAA,4EA8DeA,UAvDK,WAWlB,OACE,0BAASC,UAAWC,IAAOC,UAA3B,UACE,0BAASF,UAAWC,IAAOE,QAA3B,UACE,qBAAIH,UAAWC,IAAOG,QAAtB,UACGC,cADH,SACuB,sBAAML,UAAWC,IAAOK,KAAxB,6BAEvB,oBAAGN,UAAWC,IAAOM,KAArB,oBACUC,cADV,uFAKA,mBAAGC,KAAK,SAAST,UAAS,UAAKC,IAAOS,YAAZ,IAA2B,gBAArD,SACE,cAAC,IAAD,CAAgBV,UAAWC,IAAOU,iBAGtC,cAAC,IAAD,CACEX,UAAWC,IAAOW,aAClBC,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNC,MA5BPC,OAAOC,YAAc,IACf,IAEA,IA2BDC,KAAM,CACJH,MAAO,GAETI,MAAO,CACHJ,MAAO,YAIbK,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,qB,oBCnDtBC,EAAOC,QAAU,CAAC,UAAY,+BAA+B,aAAe,kCAAkC,QAAU,6BAA6B,QAAU,6BAA6B,KAAO,0BAA0B,KAAO,0BAA0B,YAAc,iCAAiC,UAAY,iC,gCCDzT,0GAAMC,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGIC,EAAiB,CACrB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBAGWxB,EAAc,WACzB,IAAIyB,EAAQ,IAAIC,KACZC,EAAeC,SAASH,EAAMI,YAClC,OAAOL,EAAeG,IAGXxB,EAAgB,WAIvB,IAHJ2B,EAGG,uDAHQ,GACXC,EAEG,uDAFU,EACbC,EACG,uDADS,IAERP,EAAQ,IAAIC,KACVO,EAAcR,EAAMS,cACpBC,EAAeV,EAAMW,WAE3B,GAAID,EAAeJ,EACjB,OAAOE,EAAcD,EAChB,GAAIG,GAAgBJ,EAAY,CACrC,IAAMM,EAAaZ,EAAMa,UACzB,OAAID,EAAaP,EACRG,EAAcD,EAAY,EAE1BC,EAAcD,IAKdO,EAAa,SAACC,GACzB,IAAIf,EAAQ,IAAIC,KAAKc,GAErB,OACEjB,EAAWE,EAAMW,YACjB,IACAX,EAAMa,UACN,KACAb,EAAMS","file":"static/js/23.d6b38499.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./MainSection.module.css\";\nimport Particles from \"react-particles-js\";\n\nimport { getGreeting, getCurrentAge } from \"../../../Helpers/datetimeHelpers\";\nimport { IoIosArrowDown } from \"react-icons/io\";\n\nconst MainSection = () => {\n\n  const getParticleCount = () => {\n    if(window.innerWidth >= 800) {\n      return 100;\n    } else {\n      return 42;\n    }\n  }\n  \n\n  return (\n    <section className={styles.container}>\n      <article className={styles.article}>\n        <h1 className={styles.heading}>\n          {getGreeting()}, I'm <span className={styles.name}>Tanishq Vyas</span>\n        </h1>\n        <p className={styles.para}>\n          I am a {getCurrentAge()}-year-old who loves wizarding world of Harry Potter, writing\n          poems & programming.\n        </p>\n\n        <a href=\"#about\" className={`${styles.explore_btn} ${\"no-underline\"}`}>\n          <IoIosArrowDown className={styles.down_icon} />\n        </a>\n      </article>\n      <Particles\n        className={styles.bg_particles}\n        params={{\n          particles: {\n            number: {\n              value: getParticleCount(),\n            },\n            size: {\n              value: 3,\n            },\n            color: {\n                value: \"#ffffff\"\n            }\n          },\n\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n          },\n        }}\n      />\n    </section>\n  );\n};\n\nexport default MainSection;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainSection_container__3e2OW\",\"bg_particles\":\"MainSection_bg_particles__3EToU\",\"article\":\"MainSection_article__2IRgy\",\"heading\":\"MainSection_heading__OzZrz\",\"para\":\"MainSection_para__3b8tT\",\"name\":\"MainSection_name__2833E\",\"explore_btn\":\"MainSection_explore_btn__3xlH2\",\"down_icon\":\"MainSection_down_icon__1jxdj\"};","const monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst greetingsArray = [\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Morning\",\n  \"Good Morning\",\n  \"Good Morning\",\n  \"Good Morning\",\n  \"Good Morning\",\n  \"Good Morning\",\n  \"Good Morning\",\n  \"Good Afternoon\",\n  \"Good Afternoon\",\n  \"Good Afternoon\",\n  \"Good Afternoon\",\n  \"Good Afternoon\",\n  \"Good Afternoon\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n  \"Good Evening\",\n];\n\nexport const getGreeting = () => {\n  let today = new Date();\n  let currentHours = parseInt(today.getHours());\n  return greetingsArray[currentHours];\n};\n\nexport const getCurrentAge = (\n  birthDay = 30,\n  birthMonth = 0,\n  birthYear = 2000\n) => {\n  let today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n\n  if (currentMonth > birthMonth) {\n    return currentYear - birthYear;\n  } else if (currentMonth <= birthMonth) {\n    const currentDay = today.getDate();\n    if (currentDay < birthDay) {\n      return currentYear - birthYear - 1;\n    } else {\n      return currentYear - birthYear;\n    }\n  }\n};\n\nexport const formatDate = (datetimeString) => {\n  let today = new Date(datetimeString);\n\n  return (\n    monthNames[today.getMonth()] +\n    \" \" +\n    today.getDate() +\n    \", \" +\n    today.getFullYear()\n  );\n};\n"],"sourceRoot":""}